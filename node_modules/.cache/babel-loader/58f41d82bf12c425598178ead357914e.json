{"ast":null,"code":"var _jsxFileName = \"/Users/mudassirraza/Documents/wetransfer-f3d0df/a1/src/Screen/ChangePassword/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './index.css';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { resetPassword } from '../../Redux/actions/userAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChangePassword({\n  resetPassword\n}) {\n  _s();\n\n  let params = useParams();\n  console.log('params', params);\n  let history = useHistory();\n  const [confirmPassword, setconfirmPassword] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async () => {\n    const {\n      userId,\n      token\n    } = params;\n    let form = {\n      'password': password\n    };\n\n    if (password == confirmPassword) {\n      let {\n        status\n      } = await resetPassword(form, userId, token);\n\n      if (status) {\n        history.push('/login');\n      }\n    } else {\n      alert('Password mismatch');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: e => setPassword(e.target.value),\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: e => setconfirmPassword(e.target.value),\n              type: \"password\",\n              placeholder: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChangePassword, \"w7mh8K+MNCCUVgIBQZpttJVq58U=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ChangePassword;\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  resetPassword\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/Users/mudassirraza/Documents/wetransfer-f3d0df/a1/src/Screen/ChangePassword/index.js"],"names":["React","useState","useHistory","useParams","Form","Button","connect","resetPassword","ChangePassword","params","console","log","history","confirmPassword","setconfirmPassword","password","setPassword","handleSubmit","userId","token","form","status","push","alert","e","target","value","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React,  {useState} from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport './index.css';\nimport { Form, Button} from 'react-bootstrap'\nimport { connect } from 'react-redux';\nimport { resetPassword } from '../../Redux/actions/userAction'\n\nfunction ChangePassword({resetPassword}) {\n    let params = useParams()\n    console.log('params', params)\n    let history = useHistory();\n    const [confirmPassword, setconfirmPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleSubmit = async () => {\n        const { userId, token } = params\n        let form = {\n            'password': password,\n          }\n        if(password == confirmPassword) {\n            let { status } = await resetPassword(form, userId, token)\n            if(status) {\n                history.push('/login')\n            }\n        }else {\n            alert('Password mismatch')\n        }\n    }\n\n    return (\n        <div className=\"App\">\n        <header className=\"App-header\">\n            <div className=\"login-container\">\n                <Form>\n                    <h1>Change Password</h1>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control onChange={(e) => setconfirmPassword(e.target.value)} type=\"password\" placeholder=\"Confirm Password\" />\n                    </Form.Group>\n                    \n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </header>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = {\n    resetPassword\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);"]},"metadata":{},"sourceType":"module"}