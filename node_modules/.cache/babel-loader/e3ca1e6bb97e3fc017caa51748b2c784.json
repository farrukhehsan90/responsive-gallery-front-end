{"ast":null,"code":"var _jsxFileName = \"/Users/mudassirraza/Documents/wetransfer-f3d0df/a1/src/Screen/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport { Navbar } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect, useDispatch } from 'react-redux';\nimport { getImages, logout, uploadImage, deleteImage } from '../../Redux/actions/userAction';\nimport { API_ENDPPINT } from '../../Constant/apiConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home({\n  getImages,\n  user,\n  images,\n  uploadImage\n}) {\n  _s();\n\n  let history = useHistory();\n  const [newImages, setImages] = useState(images ? images.data : []);\n  const [userData, setUser] = useState(user ? user.data : null);\n  useEffect(() => {\n    // setUser(user.data)\n    // getImages()\n    if (!user) {\n      history.push('/login');\n    }\n  }, []);\n  const dispatch = useDispatch();\n\n  const onChangeImage = async file => {\n    console.log('file', file.target.files);\n    var fd = new FormData();\n    fd.append('file', file.target.files[0], file.target.files[0].name);\n    let {\n      status\n    } = await uploadImage(fd);\n    getImages();\n  };\n\n  const logoutt = () => {\n    history.push('/login');\n    logout();\n  };\n\n  const deletee = e => {\n    console.log(e._id);\n    dispatch(deleteImage(e._id));\n    getImages();\n  };\n\n  const header = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"dark\",\n        children: !user ? /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          style: {\n            color: '#fff'\n          },\n          onClick: () => {\n            history.push('/login');\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              width: '100%',\n              padding: 7\n            },\n            children: [userData.role == '1' && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"imgupload\",\n              onChange: onChangeImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: '#fff'\n              },\n              onClick: () => logoutt(),\n              children: \"logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [header(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-container\",\n      children: images && images.data.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: images.data.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${API_ENDPPINT}/images/${value.fileName}`,\n              style: {\n                height: 200,\n                width: 300,\n                margin: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), userData.role == '1' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deletee(value),\n              children: \"Del\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Images not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"GE37z7tmqRNLAVbD8rRpQ1fU6PQ=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = Home;\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user,\n  images: state.userReducer.images\n});\n\nconst mapDispatchToProps = {\n  getImages,\n  uploadImage,\n  logout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mudassirraza/Documents/wetransfer-f3d0df/a1/src/Screen/Home/index.js"],"names":["React","useState","useEffect","Navbar","useHistory","connect","useDispatch","getImages","logout","uploadImage","deleteImage","API_ENDPPINT","Home","user","images","history","newImages","setImages","data","userData","setUser","push","dispatch","onChangeImage","file","console","log","target","files","fd","FormData","append","name","status","logoutt","deletee","e","_id","header","color","display","justifyContent","width","padding","role","length","map","value","index","fileName","height","margin","mapStateToProps","state","userReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './index.css';\nimport {Navbar} from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect, useDispatch } from 'react-redux';\nimport { getImages, logout, uploadImage ,deleteImage} from '../../Redux/actions/userAction';\nimport { API_ENDPPINT } from '../../Constant/apiConfig'\nfunction Home({getImages, user, images, uploadImage}) {\n    let history = useHistory();\n    const [newImages, setImages] = useState(images ? images.data : [])\n    const [userData, setUser] = useState(user ? user.data : null)\n\n    useEffect(() => {\n        // setUser(user.data)\n        // getImages()\n        if (!user) {\n            history.push('/login')\n        }\n    }, [])\n\n  \n    \n    const dispatch = useDispatch()\n    const onChangeImage = async (file) => {\n        console.log('file', file.target.files)\n        var fd = new FormData()\n        fd.append('file',file.target.files[0],file.target.files[0].name)\n        let {status} = await uploadImage(fd)\n        getImages();\n    }\n    const logoutt = ()=>{\n        history.push('/login')\n        logout();\n    }\n\n    const deletee = (e)=>{\n        console.log(e._id)\n       dispatch(deleteImage(e._id))\n       getImages()\n    }\n    const header = () => {\n        return(\n            <>\n            <Navbar bg=\"dark\">\n                {!user ? <Navbar.Brand style={{color: '#fff'}} onClick={() => {\n                    history.push('/login')\n                }}>Login</Navbar.Brand> : \n                <>\n                    <div style={{display:'flex',justifyContent:'space-between',width:'100%',padding:7}}>\n                       {userData.role == '1' && <input type=\"file\" id=\"imgupload\" onChange={onChangeImage}/> }\n                        <h3 style={{color: '#fff'}} onClick={()=>logoutt()}>logout</h3>\n                    </div>\n                </>\n                }\n            </Navbar>\n            </>\n        )\n    }\n    return(\n        <div>\n            {header()}\n            <div className='gallery-container'>\n                {images && images.data.length > 0 ?\n                <>\n                    {images.data.map((value, index) => {\n                    return(\n                        <div>\n                            <img src={`${API_ENDPPINT}/images/${value.fileName}`} style={{height: 200, width: 300, margin: 10}} />\n                           {userData.role == '1' && <button onClick={()=>deletee(value)} >Del</button>}\n                        </div>\n                        )\n                    })}\n                </> : \n                <p>Images not found</p>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.userReducer.user,\n    images: state.userReducer.images,\n})\n\nconst mapDispatchToProps = {\n    getImages, uploadImage,logout\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}