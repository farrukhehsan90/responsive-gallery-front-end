{"ast":null,"code":"import { postApi, getApi } from '../api_service';\nimport { API_ENDPPINT } from '../../Constant/apiConfig';\nexport const userRegister = user => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: \"USER_REGISTER_PROCESSING\"\n      });\n      let {\n        data\n      } = await postApi(`${API_ENDPPINT}/api/registration`, user);\n      console.log(\"user Registration response\", data);\n\n      if (data.status) {\n        alert(\"User Registerd Successfully\");\n        return Promise.resolve({\n          status: true\n        }); // NavigationSer.navigate(\"SignIn\")\n      } else {\n        dispatch({\n          type: \"ERROR\"\n        });\n        alert(data.message.toString());\n        return Promise.resolve({\n          status: false\n        });\n      }\n    } catch ({\n      message\n    }) {\n      dispatch({\n        type: \"ERROR\"\n      });\n      console.log(\"registration Error\", message);\n      alert(\"enter proper details user name should be atleast 6 digits\");\n      return Promise.reject({\n        status: false,\n        message\n      });\n    }\n  };\n};\nexport const login = user => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: \"FETCHING\"\n      });\n      let {\n        data\n      } = await postApi(`${API_ENDPPINT}/api/signin`, user);\n      console.log(\"user Login response\", data);\n\n      if (data.status) {\n        dispatch({\n          type: \"FETCH_USER_SUCCESS\",\n          payload: data\n        });\n        alert(\"User Login Successfully\");\n        return Promise.resolve({\n          status: true\n        });\n      } else {\n        dispatch({\n          type: \"ERROR\"\n        });\n        alert(data.message);\n        return Promise.resolve({\n          status: false\n        });\n      }\n    } catch ({\n      message\n    }) {\n      alert(\"enter proper details \");\n      dispatch({\n        type: \"ERROR\"\n      });\n      console.log(\"registration Error\", message);\n      return Promise.reject({\n        status: false,\n        message\n      });\n    }\n  };\n};\nexport const logout = user => {\n  return async dispatch => {\n    let data = [];\n    dispatch({\n      type: \"FETCH_USER_SUCCESS\",\n      payload: data\n    });\n    alert(\"Logout Successful\");\n    return Promise.resolve({\n      status: true\n    });\n  };\n};\nexport const getImages = user => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: \"FETCHING\"\n      });\n      let {\n        data\n      } = await postApi(`${API_ENDPPINT}/api/images`, user);\n      console.log(\"images response\", data);\n\n      if (data.status) {\n        dispatch({\n          type: \"FETCH_IMAGES_SUCCES\",\n          payload: data\n        });\n        return Promise.resolve({\n          status: true\n        });\n      } else {\n        dispatch({\n          type: \"ERROR\"\n        });\n        alert(data.message);\n        return Promise.resolve({\n          status: false\n        });\n      }\n    } catch ({\n      message\n    }) {\n      dispatch({\n        type: \"ERROR\"\n      });\n      console.log(\"registration Error\", message);\n      return Promise.reject({\n        status: false,\n        message\n      });\n    }\n  };\n};\nexport const uploadImage = formData => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: \"FETCHING\"\n      });\n      let {\n        data\n      } = await postApi(`${API_ENDPPINT}/api/upload`, formData);\n      console.log(\"images response\", formData);\n\n      if (data.status) {\n        return Promise.resolve({\n          status: true\n        });\n      } else {\n        dispatch({\n          type: \"ERROR\"\n        });\n        alert(data.message);\n        return Promise.resolve({\n          status: false\n        });\n      }\n    } catch ({\n      message\n    }) {\n      dispatch({\n        type: \"ERROR\"\n      });\n      console.log(\"registration Error\", message);\n      return Promise.reject({\n        status: false,\n        message\n      });\n    }\n  };\n};\nexport const deleteImage = formData => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: \"FETCHING\"\n      });\n      let {\n        data\n      } = await postApi(`${API_ENDPPINT}/api/delete`, {\n        id: formData\n      });\n      console.log(\"images response\", formData);\n\n      if (data.status) {\n        return Promise.resolve({\n          status: true\n        });\n      } else {\n        dispatch({\n          type: \"ERROR\"\n        });\n        alert(data.message);\n        return Promise.resolve({\n          status: false\n        });\n      }\n    } catch ({\n      message\n    }) {\n      dispatch({\n        type: \"ERROR\"\n      });\n      console.log(\"registration Error\", message);\n      return Promise.reject({\n        status: false,\n        message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/mudassirraza/Documents/wetransfer-f3d0df/a1/src/Redux/actions/userAction.js"],"names":["postApi","getApi","API_ENDPPINT","userRegister","user","dispatch","type","data","console","log","status","alert","Promise","resolve","message","toString","reject","login","payload","logout","getImages","uploadImage","formData","deleteImage","id"],"mappings":"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","sourcesContent":["import {  postApi, getApi } from '../api_service'\nimport { API_ENDPPINT } from '../../Constant/apiConfig'\n\n\n\nexport const userRegister = (user) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: \"USER_REGISTER_PROCESSING\" })\n      let { data } = await postApi(`${API_ENDPPINT}/api/registration`, user)\n\n      console.log(\"user Registration response\", data)\n\n      if (data.status) {\n        alert(\"User Registerd Successfully\")\n        return Promise.resolve({ status: true })\n        // NavigationSer.navigate(\"SignIn\")\n      } else {\n        dispatch({ type: \"ERROR\" })\n        alert(data.message.toString())\n        return Promise.resolve({ status: false })\n      }\n\n\n    } catch ({ message }) {\n        dispatch({ type: \"ERROR\" })\n      console.log(\"registration Error\", message)\n      alert(\"enter proper details user name should be atleast 6 digits\")\n      return Promise.reject({ status: false, message })\n    }\n  }\n}\n\n\n\nexport const login = (user) => {\n    return async (dispatch) => {\n      try {\n        dispatch({ type: \"FETCHING\" })\n        let { data } = await postApi(`${API_ENDPPINT}/api/signin`, user)\n  \n        console.log(\"user Login response\", data)\n  \n        if (data.status) {\n            dispatch({ type: \"FETCH_USER_SUCCESS\", payload: data })\n            alert(\"User Login Successfully\")\n            return Promise.resolve({ status: true })\n        } else {\n            dispatch({ type: \"ERROR\" })\n            alert(data.message)\n            return Promise.resolve({ status: false })\n        }\n  \n  \n      } catch ({ message }) {\n        alert(\"enter proper details \")\n        dispatch({ type: \"ERROR\" })\n        console.log(\"registration Error\", message)\n        return Promise.reject({ status: false, message })\n      }\n    }\n  }\n\n  export const logout = (user) => {\n    return async (dispatch) => {\n    \n        \n        let data = []\n        \n  \n        \n            dispatch({ type: \"FETCH_USER_SUCCESS\", payload: data })\n            alert(\"Logout Successful\")\n            return Promise.resolve({ status: true })\n       \n  \n  \n      \n    }\n  }\n\n  export const getImages = (user) => {\n    return async (dispatch) => {\n      try {\n        dispatch({ type: \"FETCHING\" })\n        let { data } = await postApi(`${API_ENDPPINT}/api/images`, user)\n        console.log(\"images response\", data)\n        if (data.status) {\n            dispatch({ type: \"FETCH_IMAGES_SUCCES\", payload: data })\n            return Promise.resolve({ status: true })\n        } else {\n            dispatch({ type: \"ERROR\" })\n            alert(data.message)\n            return Promise.resolve({ status: false })\n        }\n  \n  \n      } catch ({ message }) {\n        dispatch({ type: \"ERROR\" })\n        console.log(\"registration Error\", message)\n        return Promise.reject({ status: false, message })\n      }\n    }\n  }\n\n\n  export const uploadImage = (formData) => {\n    return async (dispatch) => {\n      try {\n        dispatch({ type: \"FETCHING\" })\n        let { data } = await postApi(`${API_ENDPPINT}/api/upload`, formData)\n        console.log(\"images response\", formData)\n        if (data.status) {\n            return Promise.resolve({ status: true })\n        } else {\n            dispatch({ type: \"ERROR\" })\n            alert(data.message)\n            return Promise.resolve({ status: false })\n        }\n  \n  \n      } catch ({ message }) {\n        dispatch({ type: \"ERROR\" })\n        console.log(\"registration Error\", message)\n        return Promise.reject({ status: false, message })\n      }\n    }\n  }\n\n\n  export const deleteImage = (formData) => {\n    return async (dispatch) => {\n      try {\n        dispatch({ type: \"FETCHING\" })\n        let { data } = await postApi(`${API_ENDPPINT}/api/delete`, {id: formData})\n        console.log(\"images response\", formData)\n        if (data.status) {\n            return Promise.resolve({ status: true })\n        } else {\n            dispatch({ type: \"ERROR\" })\n            alert(data.message)\n            return Promise.resolve({ status: false })\n        }\n  \n  \n      } catch ({ message }) {\n        dispatch({ type: \"ERROR\" })\n        console.log(\"registration Error\", message)\n        return Promise.reject({ status: false, message })\n      }\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}