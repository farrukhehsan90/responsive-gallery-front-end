{"ast":null,"code":"var _jsxFileName = \"/Users/mudassirraza/Documents/wetransfer-f3d0df/a1/src/Screen/ForgotPassword/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './index.css';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { forgotPassword } from '../../Redux/actions/userAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForgotPassword({\n  forgotPassword\n}) {\n  _s();\n\n  let params = useParams();\n  let history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async () => {\n    let form = {\n      'email': email,\n      'password': password\n    };\n    let {\n      status\n    } = await forgotPassword(form);\n\n    if (status) {// history.push('/')\n    }\n\n    console.log(status);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: e => setEmail(e.target.value),\n              type: \"email\",\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"We'll share reset password link your email to change password.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicCheckbox\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              label: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ForgotPassword, \"KhZ6B3E02zMl71TQJhW6T91alOA=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ForgotPassword;\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  forgotPassword\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/mudassirraza/Documents/wetransfer-f3d0df/a1/src/Screen/ForgotPassword/index.js"],"names":["React","useState","useHistory","useParams","Form","Button","connect","forgotPassword","ForgotPassword","params","history","email","setEmail","password","setPassword","handleSubmit","form","status","console","log","e","target","value","mapStateToProps","state","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAO,aAAP;AACA,SAASC,IAAT,EAAeC,MAAf,QAA4B,iBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,gCAA/B;;;AAEA,SAASC,cAAT,CAAwB;AAACD,EAAAA;AAAD,CAAxB,EAA0C;AAAA;;AACtC,MAAIE,MAAM,GAAGN,SAAS,EAAtB;AACA,MAAIO,OAAO,GAAGR,UAAU,EAAxB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMc,YAAY,GAAG,YAAY;AAC7B,QAAIC,IAAI,GAAG;AACP,eAASL,KADF;AAEP,kBAAYE;AAFL,KAAX;AAIA,QAAI;AAAEI,MAAAA;AAAF,QAAa,MAAMV,cAAc,CAACS,IAAD,CAArC;;AACA,QAAGC,MAAH,EAAW,CACP;AACD;;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACA;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI,QAAC,IAAD;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,gBAAtB;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,QAAQ,EAAGG,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvC;AAAyD,cAAA,IAAI,EAAC,OAA9D;AAAsE,cAAA,WAAW,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,mBAAtB;AAAA,mCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,IAAI,EAAC,UAAjB;AAA4B,cAAA,KAAK,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAaI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAEP,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GA3CQP,c;UACQL,S,EACCD,U;;;KAFTM,c;;AA6CT,MAAMe,eAAe,GAAIC,KAAD,KAAY,EAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG;AACvBlB,EAAAA;AADuB,CAA3B;AAIA,eAAeD,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,cAA7C,CAAf","sourcesContent":["import React,  {useState} from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport './index.css';\nimport { Form, Button} from 'react-bootstrap'\nimport { connect } from 'react-redux';\nimport { forgotPassword } from '../../Redux/actions/userAction'\n\nfunction ForgotPassword({forgotPassword}) {\n    let params = useParams()\n    let history = useHistory();\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleSubmit = async () => {\n        let form = {\n            'email': email,\n            'password': password\n          }\n        let { status } = await forgotPassword(form)\n        if(status) {\n            // history.push('/')\n          }\n        console.log(status)\n    }\n\n    return (\n        <div className=\"App\">\n        <header className=\"App-header\">\n            <div className=\"login-container\">\n                <Form>\n                    <h1>Forgot Password</h1>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"Enter email\" />\n                        <Form.Text className=\"text-muted\">\n                            We'll share reset password link your email to change password.\n                        </Form.Text>\n                    </Form.Group>\n                    \n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Remember me\" />\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </header>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = {\n    forgotPassword\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);"]},"metadata":{},"sourceType":"module"}